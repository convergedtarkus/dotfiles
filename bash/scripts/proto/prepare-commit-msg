#!/usr/bin/env bash
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
#SHA1=$3

# A source of message means -m was used, do not append ticket info.
#   Plus, in this case the -m content is already here so it would need
#   fancy logic to correctly append the ticket info.
if [[ "$COMMIT_SOURCE" == "message" ]]; then
	exit 0
fi

if [[ ! -f "$MYDOTFILES/bash/scripts/parseTicket.bash" ]]; then
	exit 0
fi

branchName=$(git rev-parse --abbrev-ref HEAD)
parseResult=$("$MYDOTFILES/bash/scripts/parseTicket.bash" "$branchName")
if [[ -n "$parseResult" ]]; then
	printf "\n%s%s" "$parseResult" "$(cat "$COMMIT_MSG_FILE")" >"$COMMIT_MSG_FILE"
fi
printf "\nSource: '%s'%s" "$COMMIT_SOURCE" "$(cat "$COMMIT_MSG_FILE")" >"$COMMIT_MSG_FILE"
